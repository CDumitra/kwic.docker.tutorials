user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] $http_host "$request" '
                      '$status $body_bytes_sent $http_upgrade $connection_upgrade';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;

    keepalive_timeout  600;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }  

    upstream websocket {
        server example.com;
    }
    server {
        listen  8080;
        listen  8081;
        server_name nginx;  
        

        max_ranges 0;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }       


 
        # Websocket connections
        # Forward service
        location /tcpproxy {
            proxy_pass http://example.com:7771;
            proxy_http_version 1.1;
            proxy_set_header X-Real-IP       $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            proxy_set_header Host            $http_host;
            proxy_set_header Upgrade         $http_upgrade;
            proxy_set_header Connection      $connection_upgrade;

            proxy_read_timeout 60000s;

           # Timeout quickly if a backend is down for demo purposes.
             proxy_connect_timeout   5s;
             proxy_next_upstream     error timeout invalid_header http_500;
        }

         location /tcpreverseproxy/ {
             proxy_pass http://example.com:7772;

             proxy_http_version 1.1;
             proxy_set_header X-Real-IP       $remote_addr;
             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

             proxy_set_header Host            $http_host;
             proxy_set_header Upgrade         $http_upgrade;
             proxy_set_header Connection      $connection_upgrade;

             # Timeout quickly if a backend is down for demo purposes.
             proxy_connect_timeout   5s;
             proxy_next_upstream     error timeout invalid_header http_500;
         }


        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }

}
    